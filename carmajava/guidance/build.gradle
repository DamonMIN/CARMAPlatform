/*
 * Copyright (C) 2018 LEIDOS.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

/* This plugin is necessary for creating installApp tasks (i.e. executables) */
apply plugin: 'application'
mainClassName = 'org.ros.RosRun'

/*
 Examples of
   1) dependencies from another project in this gradle stack.
   2,3) open ranged dependencies from a maven repository.

   Dependencies can be on external maven artifacts (such as rosjava_core
   here) or on sibling subprojects. For rosjava maven artifact dependencies
   it is a good idea to use open ranges on to
   save continually updating these references, but it is recommended
   to restrict this to the patch version number (e.g. [0.3,0.4) will
   get the latest 0.3.x version) to avoid unknowingly
   having api breaking changes usually associated with minor and major
   version number changes.
*/

repositories {
    jcenter()
}

apply from: 'https://raw.githubusercontent.com/passsy/gradle-GitVersioner/master/git-versioner.gradle'

sourceSets {
        main {
                java {
                        srcDirs= ["$projectDir/src/main/java"]
                }
                resources {
                        srcDirs= ["$projectDir/src/main/resources"]
                }
        }
}

dependencies {
  compile 'org.ros.rosjava_core:rosjava:[0.3,0.4)'
  compile 'org.ros.rosjava_core:rosjava_geometry:0.3.5'
  compile 'org.ros.rosjava_messages:sensor_msgs:1.12.5'
  compile 'org.ros.rosjava_messages:cav_msgs:0.1.0'
  compile 'org.ros.rosjava_messages:cav_srvs:0.1.0'
  compile 'org.ros.rosjava_messages:j2735_msgs:0.1.0'
  compile 'org.reflections:reflections:0.9.11'

  compile project(':guidance_plugin_api')
  compile project(':speedharm')
  compile project(':rosutils')
  compile project(':route')
  compile project(':platooning')
  compile project(':cooperativemerge')
  compile project(':signal_plugin')
  compile name: 'saxton-utils-2.0.0'
  compile project(':geometry')

  testCompile 'org.mockito:mockito-core:2.+'
  testCompile 'junit:junit:4.12'
}

task writeVersionFile << {
    println "Updating build number to: " + gitVersion.version
    println "Updating build suffix to: " + gitVersion.shortBranch

    // Make sure the resources folder exists
    def resourcesFolder = new File("$projectDir/src/main/resources")
    if (!resourcesFolder.exists()) {
        resourcesFolder.mkdirs()
    }

    // Write the file
    def file = new File("$projectDir/src/main/resources/version")
    file.createNewFile();
    
    file.text="$gitVersion.version\n$gitVersion.shortBranch\n"
}

compileJava {
    dependsOn writeVersionFile
}
